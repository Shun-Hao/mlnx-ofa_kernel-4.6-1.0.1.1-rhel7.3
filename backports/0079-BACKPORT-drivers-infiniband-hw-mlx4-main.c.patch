From: Alaa Hleihel <alaa@mellanox.com>
Subject: [PATCH] BACKPORT: drivers/infiniband/hw/mlx4/main.c

Change-Id: I91abcca50d3559fdcfeb05a4fbcf9d09a463a9df
---
 drivers/infiniband/hw/mlx4/main.c | 32 ++++++++++++++++++++++++++++++++
 1 file changed, 32 insertions(+)

diff --git a/drivers/infiniband/hw/mlx4/main.c b/drivers/infiniband/hw/mlx4/main.c
index xxxxxxx..xxxxxxx 100644
--- a/drivers/infiniband/hw/mlx4/main.c
+++ b/drivers/infiniband/hw/mlx4/main.c
@@ -44,7 +44,9 @@
 
 #include <net/ipv6.h>
 #include <net/addrconf.h>
+#ifdef HAVE_DEVLINK_H
 #include <net/devlink.h>
+#endif
 
 #include <rdma/ib_smi.h>
 #include <rdma/ib_user_verbs.h>
@@ -61,6 +63,16 @@
 #include "mlx4_ib.h"
 #include <rdma/mlx4-abi.h>
 
+#ifdef DRV_NAME
+#undef DRV_NAME
+#endif
+#ifdef DRV_VERSION
+#undef DRV_VERSION
+#endif
+#ifdef DRV_RELDATE
+#undef DRV_RELDATE
+#endif
+
 #define DRV_NAME	MLX4_IB_DRV_NAME
 #define DRV_VERSION	"4.0-0"
 
@@ -82,6 +94,13 @@ module_param_named(en_ecn, en_ecn, bool, 0444);
 MODULE_PARM_DESC(en_ecn, "Enable q/ecn [enable = 1, disable = 0 (default)]");
 #endif
 
+#ifdef register_netdevice_notifier_rh
+#undef  register_netdevice_notifier
+#undef  unregister_netdevice_notifier
+#define register_netdevice_notifier             register_netdevice_notifier_rh
+#define unregister_netdevice_notifier           unregister_netdevice_notifier_rh
+#endif
+
 extern bool roce_v1_noncompat_gid;
 enum {
 	MAX_NUM_STR_BITMAP = 1 << 15,
@@ -175,6 +194,7 @@ static struct net_device *mlx4_ib_get_netdev(struct ib_device *device, u8 port_n
 	dev = mlx4_get_protocol_dev(ibdev->dev, MLX4_PROT_ETH, port_num);
 
 	if (dev) {
+#ifdef HAVE_BONDING_H
 		if (mlx4_is_bonded(ibdev->dev)) {
 			struct net_device *upper = NULL;
 
@@ -187,6 +207,7 @@ static struct net_device *mlx4_ib_get_netdev(struct ib_device *device, u8 port_n
 					dev = active;
 			}
 		}
+#endif
 	}
 	if (dev)
 		dev_hold(dev);
@@ -2867,6 +2888,9 @@ static void *mlx4_ib_add(struct mlx4_dev *dev)
 	ibdev->ib_dev.exp_create_qp	= mlx4_ib_exp_create_qp;
 	ibdev->ib_dev.exp_query_device	= mlx4_ib_exp_query_device;
 	ibdev->ib_dev.exp_ioctl		= mlx4_ib_exp_ioctl;
+#ifdef HAVE_MM_STRUCT_FREE_AREA_CACHE
+	ibdev->ib_dev.exp_get_unmapped_area = mlx4_ib_exp_get_unmapped_area;
+#endif
 	ibdev->ib_dev.rereg_user_mr	= mlx4_ib_rereg_user_mr;
 	ibdev->ib_dev.dereg_mr		= mlx4_ib_dereg_mr;
 	ibdev->ib_dev.alloc_mr		= mlx4_ib_alloc_mr;
@@ -2876,7 +2900,9 @@ static void *mlx4_ib_add(struct mlx4_dev *dev)
 	ibdev->ib_dev.process_mad	= mlx4_ib_process_mad;
 	ibdev->ib_dev.get_port_immutable = mlx4_port_immutable;
 	ibdev->ib_dev.get_dev_fw_str    = get_fw_ver_str;
+#if defined(HAVE_PUT_TASK_STRUCT_EXPORTED) && defined(HAVE_GET_TASK_PID_EXPORTED) && defined(HAVE_GET_PID_TASK_EXPORTED)
 	ibdev->ib_dev.disassociate_ucontext = mlx4_ib_disassociate_ucontext;
+#endif
 
 	ibdev->ib_dev.uverbs_ex_cmd_mask |=
 		(1ull << IB_USER_VERBS_EX_CMD_MODIFY_CQ);
@@ -3086,9 +3112,11 @@ static void *mlx4_ib_add(struct mlx4_dev *dev)
 	}
 
 	ibdev->ib_active = true;
+#ifdef HAVE_DEVLINK_H
 	mlx4_foreach_port(i, dev, MLX4_PORT_TYPE_IB)
 		devlink_port_type_ib_set(mlx4_get_devlink_port(dev, i),
 					 &ibdev->ib_dev);
+#endif
 
 	if (mlx4_is_mfunc(ibdev->dev))
 		init_pkeys(ibdev);
@@ -3223,10 +3251,14 @@ static void mlx4_ib_remove(struct mlx4_dev *dev, void *ibdev_ptr)
 	struct mlx4_ib_dev *ibdev = ibdev_ptr;
 	int dev_idx, ret;
 	int p;
+#ifdef HAVE_DEVLINK_H
 	int i;
+#endif
 
+#ifdef HAVE_DEVLINK_H
 	mlx4_foreach_port(i, dev, MLX4_PORT_TYPE_IB)
 		devlink_port_type_clear(mlx4_get_devlink_port(dev, i));
+#endif
 	ibdev->ib_active = false;
 	flush_workqueue(wq);
 
